// Code generated by buildx tool. DO NOT EDIT.
// Code generated by buildx tool. DO NOT EDIT.
// Code generated by buildx tool. DO NOT EDIT.

package bootstrap

import (
	"{{ .ProjectName }}/internal/application"
	"{{ .ProjectName }}/internal/infrastructure/persistence"
	"{{ .ProjectName }}/internal/interfaces/api"
	"{{ .ProjectName }}/internal/interfaces/web"
	"{{ .ProjectName }}/internal/infrastructure/query"
	"gorm.io/gorm"
)

type appContext struct {
	ConfigHandler *api.ConfigHandler
	LoginHandler *api.LoginHandler
	PublicHandler *api.PublicHandler
	ViewIndexHandler *web.ViewIndexHandler
	ViewLoginHandler *web.ViewLoginHandler
}

func NewAppContext(db *gorm.DB) *appContext {
	configRepo := &persistence.ConfigRepository{DB: db, Q: query.Q}
	configService := &application.ConfigService{Repo: configRepo}
	configHandler := &api.ConfigHandler{ConfigService: configService}

	loginRepo := &persistence.LoginRepository{DB: db, Q: query.Q}
	loginService := &application.LoginService{Repo: loginRepo}
	loginHandler := &api.LoginHandler{LoginService: loginService}

	publicRepo := &persistence.PublicRepository{DB: db, Q: query.Q}
	publicService := &application.PublicService{Repo: publicRepo}
	publicHandler := &api.PublicHandler{PublicService: publicService}

	viewIndexRepo := &persistence.ViewIndexRepository{DB: db, Q: query.Q}
	viewIndexService := &application.ViewIndexService{Repo: viewIndexRepo}
	viewIndexHandler := &web.ViewIndexHandler{ViewIndexService: viewIndexService}

	viewLoginRepo := &persistence.ViewLoginRepository{DB: db, Q: query.Q}
	viewLoginService := &application.ViewLoginService{Repo: viewLoginRepo}
	viewLoginHandler := &web.ViewLoginHandler{ViewLoginService: viewLoginService}

	return &appContext{
		ConfigHandler: configHandler,
		LoginHandler: loginHandler,
		PublicHandler: publicHandler,
		ViewIndexHandler: viewIndexHandler,
		ViewLoginHandler: viewLoginHandler,
	}
}